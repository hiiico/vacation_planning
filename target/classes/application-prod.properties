spring.application.name=Vacation Planning Application
#MVC configuration
spring.mvc.hiddenmethod.filter.enabled=true
# Base configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://shared-mysql-db:3306/vacation_planning?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=${db_username}
spring.datasource.password=${db_password}
logging.level.org.hibernate.persister.entity=ERROR

urlaubsplanung-notification.failure-message.clear-history=Notification server is temporary down
# when app in container
#urlaubsplanung-notification.base-url=http://host.docker.internal:8081/api/v1/notifications
#urlaubsplanung-notification.base-url=http://urlaubsplanung-notification:8081/api/v1/notifications

feign.client.config.default.connectTimeout=5000
feign.client.config.default.readTimeout=5000
logging.level.org.springframework.cloud.openfeign=DEBUG
logging.level.org.springframework.web.client.RestTemplate=DEBUG

#kafka broker running location
spring.kafka.bootstrap-servers=kafka:9092
#JSON Serializer (for sending)
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.retries=3
spring.kafka.producer.properties.retry.backoff.ms=1000
spring.kafka.producer.properties.max.block.ms=120000
#JSON Deserializer (for receiving)
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.fetch.max.wait.ms=120000
# Add missing consumer configuration:
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
# Add missing listener configuration (important!)
spring.kafka.listener.ack-mode=RECORD
spring.kafka.consumer.group-id=vacation_planning-group
# Add to both application-prod.properties files
logging.level.org.apache.kafka=DEBUG
logging.level.org.springframework.kafka=DEBUG