spring.application.name=Vacation Planning Application
# ==
#MVC
# ==
spring.mvc.hiddenmethod.filter.enabled=true

# ======================
# Database configuration
# ======================
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/vacation_planning?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&
spring.datasource.username=${db_username}
spring.datasource.password=${db_password}
logging.level.org.hibernate.persister.entity=ERROR
#Change server port
server.port=8080

management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.probes.enabled=true

# ============================
#kafka broker running location
# ============================
spring.kafka.bootstrap-servers=localhost:9092
# multi tread
#spring.kafka.bootstrap-servers=localhost:9092, 9093, 9094 for many brokers

# ========
# Producer
# ========
# cross language
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.properties.max-in-flight-requests-per-connection=5
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.spring.json.add.type.headers=false
# the same in both apps
app.kafka.input-topic=user-event.v1

# ==============================
# --- Consumer (for replies) ---
# ==============================
# cross language
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# java <-> java read headers
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
# # safety mode for java <-> java
#spring.kafka.consumer.properties.spring.json.trusted.packages=app.event.payload,java.util,java.lang
spring.kafka.consumer.properties.spring.json.value.default.type=com.fasterxml.jackson.databind.JsonNode
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.listener.ack-mode=record
app.kafka.reply-topic=user-event.reply.v1
spring.kafka.listener.concurrency=3
#not duplicate with producer group-id (separate messages consum group-id)
spring.kafka.consumer.group-id=main-app-replies
spring.kafka.consumer.properties.spring.json.add.type.headers=false


