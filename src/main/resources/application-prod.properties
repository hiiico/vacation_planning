spring.application.name=Vacation Planning Application
#MVC configuration
spring.mvc.hiddenmethod.filter.enabled=true
# Base configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://host.docker.internal:3306/vacation_planning?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=${db_username}
spring.datasource.password=${db_password}
logging.level.org.hibernate.persister.entity=ERROR

urlaubsplanung-notification.failure-message.clear-history=Notification server is temporary down
#urlaubsplanung-notification.base-url=http://host.docker.internal:8081/api/v1/notifications
urlaubsplanung-notification.base-url=http://urlaubsplanung-notification:8081/api/v1/notifications

feign.client.config.default.connectTimeout=5000
feign.client.config.default.readTimeout=5000
logging.level.org.springframework.cloud.openfeign=DEBUG
logging.level.org.springframework.web.client.RestTemplate=DEBUG
#kafka broker running location
#spring.kafka.bootstrap-servers=localhost:9092
#
##JSON Serializer (for sending)
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#
##JSON Deserializer (for receiving)
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*
#spring.kafka.consumer.group-id=vacation_planning-group